# Proxy#
skip Data.Map.Internal.bogus
skip Data.Map.Internal.deleteAlong
skip Data.Map.Internal.atKeyImpl
skip Data.Map.Internal.alterF

rename value Data.Map.Internal.bool = Data.Map.Internal.boolITE


# Type inference fail
skip Data.Map.Internal.differenceWithKey
skip Data.Map.Internal.differenceWith

redefine Local Definition Data.Map.Internal.Functor__Map_op_zlzd__ 
			{k:Type}{a:Type}{b:Type}:= @functor__Map_op_zlzd__ k a b.

order Data.Map.Internal.Eq1__Map Data.Map.Internal.Ord1__Map
order Data.Map.Internal.Eq2__Map Data.Map.Internal.Ord2__Map
order Data.Map.Internal.Eq___Map Data.Map.Internal.Ord__Map
order Data.Map.Internal.Semigroup__Map Data.Map.Internal.Monoid__Map_mappend 

order Data.Map.Internal.Functor__WhenMissing  Data.Map.Internal.Applicative__WhenMissing Data.Map.Internal.Monad__WhenMissing_op_zgzg__ Data.Map.Internal.Monad__WhenMissing_return_
order Data.Map.Internal.Functor__WhenMatched  Data.Map.Internal.Applicative__WhenMatched Data.Map.Internal.Monad__WhenMatched_op_zgzg__ Data.Map.Internal.Monad__WhenMatched_return_

order Data.Map.Internal.Functor__Map Data.Map.Internal.mapWhenMissing
order Data.Map.Internal.Functor__Map Data.Map.Internal.lmapWhenMissing
order Data.Map.Internal.Functor__Map Data.Map.Internal.Foldable__Map Data.Map.Internal.Traversable__Map

# TODOs
skip Data.Map.Internal.Eq1__Map
skip Data.Map.Internal.Ord1__Map

# skip Data.Map.Internal.Functor__WhenMissing
 skip Data.Map.Internal.Applicative__WhenMissing
 skip Data.Map.Internal.Monad__WhenMissing
 skip Data.Map.Internal.Category__WhenMissing
# skip Data.Map.Internal.Functor__WhenMatched
 skip Data.Map.Internal.Applicative__WhenMatched
 skip Data.Map.Internal.Monad__WhenMatched
 skip Data.Map.Internal.Category__WhenMatched


skip Data.Map.Internal.showTree
skip Data.Map.Internal.showTreeWith
skip Data.Map.Internal.showsBars
skip Data.Map.Internal.showWide
skip Data.Map.Internal.showsTree
skip Data.Map.Internal.showsTreeHang

skip Data.Map.Internal.fromListConstr
skip Data.Map.Internal.mapDataType

termination Data.Map.Internal.link {measure (Nat.add (map_size arg_2__) (map_size arg_3__))}
obligations Data.Map.Internal.link termination_by_omega
termination Data.Map.Internal.link2 {measure (Nat.add (map_size arg_0__) (map_size arg_1__))}
obligations Data.Map.Internal.link2 termination_by_omega

in Data.Map.Internal.fromDistinctAscList  termination create deferred
in Data.Map.Internal.fromDistinctAscList  termination go     deferred
in Data.Map.Internal.fromDistinctDescList termination create deferred
in Data.Map.Internal.fromDistinctDescList termination go     deferred
in Data.Map.Internal.fromList             termination create deferred
in Data.Map.Internal.fromList             termination go     deferred

rename value Data.Map.Internal.WhenMatched = Data.Map.Internal.Mk_WhenMatched
rename value Data.Map.Internal.TraceResult = Data.Map.Internal.Mk_TraceResult
rename value Data.Map.Internal.StrictTriple = Data.Map.Internal.Mk_StrictTriple
rename value Data.Map.Internal.MaxView = Data.Map.Internal.Mk_MaxView
rename value Data.Map.Internal.MinView = Data.Map.Internal.Mk_MinView
rename value Data.Map.Internal.WhenMissing = Data.Map.Internal.Mk_WhenMissing

# partial
skip Data.Map.Internal.find
skip Data.Map.Internal.op_zn__
skip Data.Map.Internal.findMax
skip Data.Map.Internal.findMin
skip Data.Map.Internal.elemAt
skip Data.Map.Internal.deleteFindMin
skip Data.Map.Internal.deleteFindMax

# no BitQueue
skip Data.Map.Internal.lookupTrace
skip Data.Map.Internal.replaceAlong
skip Data.Map.Internal.insertAlong
rename type Utils.Containers.Internal.BitQueue.BitQueue = unit

# Putting fixpoint type annotations in binders causes type/term namespace collision
in Data.Map.Internal.splitLookup rename value k = k0
in Data.Map.Internal.splitMember rename value k = k0
